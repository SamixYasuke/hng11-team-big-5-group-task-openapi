openapi: 3.1.0
info:
  title: Team Big 5 HNG 11 OpenAPI Documentation
  version: 1.0.0
  
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
security:
  - BearerAuth: []
  
paths:
  /auth/register:
    post:
      summary: Register user
      tags:
        - User Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  
                lastName:
                  type: string
                  
                email:
                  type: string
                  
                  
                language:
                  type: string
                  
                region:
                  type: string
                  
                password:
                  type: string
                 
                phone:
                  type: string
      responses:
        '201':
          description: Successfully Registered User
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Registration successful
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                      user:
                        type: object
                        properties:
                          userId:
                            type: string
                          firstName:
                            type: string
                          lastName:
                            type: string
                          email:
                            type: string
                          language:
                            type: string
                           
                          region:
                            type: string
                            
                          phone:
                            type: string
                  statusCode:
                    type: number
                    example: 201
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  statusCode:
                    type: number
        '422':
          description: Field is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
  /auth/login:
    post:
      summary: Login user
      tags:
        - User Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Login successful
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                      user:
                        type: object
                        properties:
                          userId:
                            type: string
                          firstName:
                            type: string
                          lastName:
                            type: string
                          email:
                            type: string
                          language:
                            type: string
                            
                          region:
                            type: string
                            
                          phone:
                            type: string
                  statusCode:
                    type: number
                    example: 200
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Invalid password
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: User with email address {email} not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /auth/magic-link:
    post:
      summary: Send magic link for authentication
      tags:
        - User Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email address of the user
      responses:
        '200':
          description: Magic link sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Magic link sent successfully
                  statusCode:
                    type: number
                    example: 200
        '404':
          description: User not registered with email address
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: User with email address {email} not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /blogs:
    get:
      summary: Get all blogs
      tags:
        - Blogs
      responses:
        '200':
          description: Successfully retrieved blogs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    userId:
                      type: string
                    title:
                      type: string
                    content:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    post:
      summary: Create a new blog
      tags:
        - Blogs
  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Successfully created blog
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  userId:
                    type: string
                  title:
                    type: string
                  content:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  statusCode:
                    type: number
                    example: 401
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /blogs/{id}:
    get:
      summary: Get a blog by ID
      tags:
        - Blogs
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved blog
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  userId:
                    type: string
                  title:
                    type: string
                  content:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '404':
          description: Blog not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  statusCode:
                    type: number
                    example: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    patch:
      summary: Update a blog by ID
      tags:
        - Blogs
      
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: Successfully updated blog
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  userId:
                    type: string
                  title:
                    type: string
                  content:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  statusCode:
                    type: number
                    example: 401
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  statusCode:
                    type: number
                    example: 403
        '404':
          description: Blog not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  statusCode:
                    type: number
                    example: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    delete:
      summary: Delete a blog by ID
      tags:
        - Blogs
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted blog
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  statusCode:
                    type: number
                    example: 204
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  statusCode:
                    type: number
                    example: 401
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  statusCode:
                    type: number
                    example: 403
        '404':
          description: Blog not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  statusCode:
                    type: number
                    example: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /contacts:
    get:
      summary: Retrieve all contacts
      tags:
        - Contacts
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved contacts
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  contacts:
                    type: array
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                        phone:
                          type: string
                        description:
                          type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    post:
      summary: Create a new contact
      tags:
        - Contacts
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phone:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Contact created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  contact:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Bad Request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /emails:
    post:
      summary: Send a message
      tags:
        - Emails
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailaddress:
                  type: string
                senderId:
                  type: string
                recipientId:
                  type: string
                subject:
                  type: string
                body:
                  type: string
                createdAt:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Successfully sent message
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Message sent successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    get:
      summary: Get messages
      tags:
        - Emails
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: sjbxsjys7ssusuxjbsx6xsts
                        recieverId:
                          type: string
                          example: sjbxdshdu6t6tt776bsx6xsts
                        subject:
                          type: string
                          example: How are you samuel
                        body:
                          type: string
                          example: Hello, samixx yasuke how are you?
                        sentAt:
                          type: string
                          format: date-time
                          example: '2024-07-12T12:00:00Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /notifications:
    get:
      summary: Retrieve notifications
      tags:
        - Notifications
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  notifications:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: string
                        message:
                          type: string
                        recipientId:
                          type: string
                        subject:
                          type: string
                        body:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /organisations:
    get:
      summary: Get list of organisations
      tags:
        - Organisations
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved list of organisations
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Organisations retrieved successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: jhdjhdjhdj49484uhsjjsjjx
                        name:
                          type: string
                          example: Samixx Organisation
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    post:
      summary: Create a new organisation
      tags:
        - Organisations
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Successfully created organisation
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: New Organisation
                  description:
                    type: string
                    example: Description of the new organisation
                  UserId:
                    type: string
                    example: djdchuc87cy3udjjcc
                  newOrg:
                    type: object
                    properties:
                      id:
                        type: string
                        example: ndbjdud7ey78y3uejsjs
                      name:
                        type: string
                        example: New Organisation
                      description:
                        type: string
                        example: Description of the new organisation
        '400':
          description: Bad request, missing or invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Name and description are required
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /organisations/{id}:
    get:
      summary: Get organisation by ID
      tags:
        - Organisations
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the organisation to retrieve
      responses:
        '200':
          description: Successfully retrieved organisation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: jhujd7svw2yeg7shgs7
                  name:
                    type: string
                    example: Samixx Organisation
                  description:
                    type: string
                    example: Description of the Samixx's organisation
                  UserId:
                    type: string
                    example: ssjs7ss8uss8sbjs88
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '403':
          description: Forbidden - User does not have permission to view the organisation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: You do not have permission to view this organisation
        '404':
          description: Organisation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Organisation not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    patch:
      summary: Update organisation information
      tags:
        - Organisations
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the organisation to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Successfully updated organisation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: hsjws7yshaxjxujaxujhsx
                  name:
                    type: string
                    example: Updated Organisation Name
                  description:
                    type: string
                    example: Updated description of the organisation
                  UserId:
                    type: string
                    example: ns7ssgsvss67s8sgs7
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '403':
          description: Forbidden - User is not the creator of the organisation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: You do not have permission to edit this organisation
        '404':
          description: Organisation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Organisation not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    delete:
      summary: Delete organisation by ID
      tags:
        - Organisations
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the organisation to delete
      responses:
        '204':
          description: Successfully deleted organisation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Successfully deleted organisation
                  statusCode:
                    type: number
                    example: 204
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '403':
          description: Forbidden - User is not the owner of the organisation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: You do not have permission to delete this organisation
        '404':
          description: Organisation not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Organisation not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /payments:
    post:
      summary: Create a payment
      tags:
        - Payments
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                orgId:
                  type: string
                paymentProvider:
                  type: string
                amount:
                  type: number
                description:
                  type: string
                paymentMethod:
                  type: string
                currency:
                  type: string
                status:
                  type: string
      responses:
        '201':
          description: Payment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Payment created successfully
                  payment:
                    type: object
                    properties:
                      id:
                        type: string
                        example: nnjxnn3injejdnxjnjx
                      userId:
                        type: string
                        example: nnjxnn3injejdnxjnjx
                      orgId:
                        type: string
                        example: nnjxnn3injejdnxjnjx
                      paymentProvider:
                        type: string
                        example: flutterwave
                      amount:
                        type: number
                        example: 20,000
                      paymentMethod:
                        type: string
                        example: Credit Card
                      currency:
                        type: string
                        example: NGN
                      status:
                        type: string
                        example: pending
                      product:
                        type: string
                        example: Hoodie
                      createdAt:
                        type: string
                        format: date-time
                        example: '2024-07-12T12:00:00Z'
        '400':
          description: Bad request, invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Invalid parameters
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    get:
      summary: Get list of payments
      tags:
        - Payments
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved list of payments
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    example: nbd73hvvddvd7y7dhud
                  orgId:
                    type: string
                    example: nd7dd78e374yehdhd
                  payments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: sshjs7sjsjshjshjs
                        amount:
                          type: number
                          example: 18,000
                        paymentProvider:
                          type: string
                          example: FlutterWave
                        status:
                          type: string
                          example: success
                        description:
                          type: string
                          example: Payment for anime hoodie for samixx
                        paymentMethod:
                          type: string
                          example: credit_card
                        currency:
                          type: string
                          example: NGN
                        transactionId:
                          type: string
                          example: tx_1234567890
                        customerId:
                          type: string
                          example: jdhjdhdye8hdjxuhuhd
                        createdAt:
                          type: string
                          format: date-time
                          example: '2024-07-12T12:00:00Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /profiles/{userId}:
    get:
      summary: Get user profile
      tags:
        - Profiles
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: The ID of the user
      responses:
        '200':
          description: Successfully retrieved user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User profile retrieved successfully
                  profile:
                    type: object
                    properties:
                      userId:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      phone:
                        type: string
                      profilePicture:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      organizations:
                        type: array
                        items:
                          type: object
                          properties:
                            orgId:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                            createdAt:
                              type: string
                              format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    patch:
      summary: Update user profile
      tags:
        - Profiles
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: The ID of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                profilePicture:
                  type: string
      responses:
        '200':
          description: Successfully updated user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User profile updated successfully
                  profile:
                    type: object
                    properties:
                      userId:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      phone:
                        type: string
                      profilePicture:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: >-
                      Forbidden: You do not have permission to update this
                      profile
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /settings:
    get:
      summary: Get user settings
      tags:
        - Settings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved user settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User settings retrieved successfully
                  settings:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: jdjd7yd7dndbd7d86tddn
                        key:
                          type: string
                          example: theme
                        value:
                          type: string
                          example: dark
                        createdAt:
                          type: string
                          format: date-time
                          example: '2024-07-12T12:00:00Z'
                        updatedAt:
                          type: string
                          format: date-time
                          example: '2024-07-12T12:30:00Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    patch:
      summary: Update user settings
      tags:
        - Settings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  example: dark
                notificationsEnabled:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Settings updated successfully
                  updatedSettings:
                    type: object
                    properties:
                      theme:
                        type: string
                        example: dark
                      notificationsEnabled:
                        type: boolean
                        example: true
        '400':
          description: Bad request, invalid parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Invalid parameters
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /users:
    get:
      summary: Get list of users
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Users retrieved successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: string
                          example: 83e8eyfhsvfcdvhaedbcj
                        firstName:
                          type: string
                          example: Samixx
                        lastName:
                          type: string
                          example: Yasuke
                        email:
                          type: string
                          example: samixx@gmail.com
                  statusCode:
                    type: number
                    example: 200
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /users/{id}:
    get:
      summary: Get user by ID
      tags:
        - Users
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the user to retrieve
      responses:
        '200':
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User retrieved successfully
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: dwjhcf7eyw8ceuehdjhcejhc
                      firstName:
                        type: string
                        example: Samixx
                      lastName:
                        type: string
                        example: Yasuke
                      email:
                        type: string
                        example: samixx@gmail.com
                  statusCode:
                    type: number
                    example: 200
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    patch:
      summary: Update user details
      tags:
        - Users
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: Successfully updated user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User updated successfully
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: jdjgxjhj7sysguguxu7w65a6asx
                      firstName:
                        type: string
                        example: Samixx
                      lastName:
                        type: string
                        example: Yasuke
                      email:
                        type: string
                        example: samixx@gmail.com
                      phone:
                        type: string
                        example: '09076376736776376736736'
                  statusCode:
                    type: number
                    example: 200
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Invalid input
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    delete:
      summary: Delete user by ID
      tags:
        - Users
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the user to delete
      responses:
        '200':
          description: Successfully deleted user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: User deleted successfully
                  statusCode:
                    type: number
                    example: 200
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
  /widgets:
    get:
      summary: Retrieve all widgets
      tags:
        - Widgets
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved widgets
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  Widgets:
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                        userId:
                          type: string
                        data:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
    post:
      summary: Create a new widget
      tags:
        - Widgets
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                data:
                  type: string
      responses:
        '201':
          description: Widget created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  widget:
                    type: object
                    properties:
                      id:
                        type: string
                      userId:
                        type: string
                      data:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Bad Request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Internal Server Error
tags: []
